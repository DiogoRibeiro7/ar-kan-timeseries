[tool.poetry]
name = "ar-kan-timeseries"
version = "0.1.0"
description = "AR-KAN for time series: AR memory + KAN nonlinearity, grid search, STL periodicity, Rdatasets loader."
authors = ["Diogo Ribeiro <dfr@esmad.ipp.pt>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "arkan_ts", from = "src" }]
repository = "https://github.com/diogoribeiro7/ar-kan-timeseries"
homepage = "https://github.com/diogoribeiro7/ar-kan-timeseries"
documentation = "https://github.com/diogoribeiro7/ar-kan-timeseries"
keywords = ["python", "time-series", "forecasting", "arima", "kan", "torch", "stl", "splines"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.poetry.dependencies]
python = ">=3.10"
numpy = "^2.0.0"
torch = "^2.2.0"
tqdm = "^4.66.0"
statsmodels = "^0.14.0"
pandas = "^2.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^7.0.0"
pytest-mock = "^3.12.0"
pytest-sugar = "^1.0.0"
mypy = "^1.10.0"
ruff = "^0.6.0"
black = "^25.9.0"
isort = "^7.0.0"
pydocstyle = "^6.3.0"
bandit = "^1.7.7"
tomlkit = "^0.13.3"
packaging = "^25.0"
types-setuptools = "*"
types-tqdm = "^4.66.0.20240417"
types-requests = "^2.32.0.20240914"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
myst-parser = "^2.0.0"
sphinxcontrib-napoleon = "^0.7"
sphinx-autodoc-typehints = "^1.24.0"
sphinx-autobuild = "^2021.3.14"
sphinx-copybutton = "^0.5.2"
sphinx-github-changelog = "^1.2.0"
sphinx-issues = "^3.0.1"
sphinxext-opengraph = "^0.8.2"

[tool.poetry.scripts]
arkan = "arkan_ts.__main__:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Type checking configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 100
select = ["E", "F", "B", "I", "N", "UP", "ANN", "D", "S", "BLE", "A", "C4", "T20", "PT", "RET", "SIM"]
ignore = ["ANN101", "D203", "D213"]
unfixable = ["F401"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN", "D", "S101", "PT011", "F401", "SIM117", "S102", "SIM115"]
"*/__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["arkan_ts"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--cov=arkan_ts --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["arkan_ts"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101"]

